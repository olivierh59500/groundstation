#!/usr/bin/env python
import os
import sys
import select
import time
import argparse

from groundstation import logger
log = logger.getLogger("soundstationd")

from groundstation.node import Node
from groundstation.station import Station

from groundstation.audio_discoverer import AudioDiscoverer
from groundstation.audio_announcer import AudioAnnouncer
from groundstation import settings

import groundstation.audio

BEACON_TIMEOUT = groundstation.audio.BEACON_TIMEOUT
FREQUENCY = groundstation.audio.FREQUENCY

myself = Node()
station = Station.from_env(myself)

discoverer = AudioDiscoverer(FREQUENCY)
announcer  = AudioAnnouncer(FREQUENCY)

def main_server(opts):
    log.info("Starting discoverer at %dhz" % FREQUENCY)
    discoverer.start()

def main_client(opts):
    log.info("Starting announcer at %dhz" % FREQUENCY)
    while True:
        announcer.ping()
        time.sleep(groundstation.audio.BEACON_TIMEOUT)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--server", dest='server', action='store_true',
                        default=None)
    parser.add_argument("--client", dest='server', action='store_false',
                        default=None)

    args = parser.parse_args()
    if args.server is None:
        raise Exception("Must specify --server or --client")

    if args.server:
        main_server(args)
    else:
        main_client(args)
